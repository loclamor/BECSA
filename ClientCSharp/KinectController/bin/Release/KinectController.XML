<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KinectController</name>
    </assembly>
    <members>
        <member name="T:KinectController.KinectController">
            <summary>
            Kinect controller
            </summary>
        </member>
        <member name="F:KinectController.KinectController.sensor">
            <summary>
            Kinect sensor
            </summary>
        </member>
        <member name="F:KinectController.KinectController.skeletons">
            <summary>
            Skeletons detected
            </summary>
        </member>
        <member name="F:KinectController.KinectController._currentScenario">
            <summary>
            Private: Current scenario
            </summary>
        </member>
        <member name="M:KinectController.KinectController.#ctor">
            <summary>
            Initialize 
            </summary>
        </member>
        <member name="M:KinectController.KinectController.Start">
            <summary>
            Start the kinect controller
            </summary>
            <returns>True if start initialized</returns>
        </member>
        <member name="M:KinectController.KinectController.Reset">
            <summary>
            Reset skeletons count
            </summary>
        </member>
        <member name="M:KinectController.KinectController.Stop">
            <summary>
            Stop the kinect controller
            </summary>
        </member>
        <member name="M:KinectController.KinectController.kinect_SkeletonFrameReady(System.Object,Microsoft.Kinect.SkeletonFrameReadyEventArgs)">
            <summary>
            Detect skeleton
            </summary>
            <param name="sender">Object that send the event</param>
            <param name="e">Event data</param>
        </member>
        <member name="P:KinectController.KinectController.SkeleteDetectedCount">
            <summary>
            Count of skeletons detected
            </summary>
        </member>
        <member name="P:KinectController.KinectController.CurrentScenario">
            <summary>
            Current scenario
            </summary>
        </member>
        <member name="T:KinectController.Program">
            <summary>
            C# client of SmartHome, provide an example of home implementation.
            </summary>
        </member>
        <member name="F:KinectController.Program.SERVER_URI">
            <summary>
            Server location
            </summary>
        </member>
        <member name="F:KinectController.Program.IDENTIFIER">
            <summary>
            Identifier used by server
            </summary>
        </member>
        <member name="F:KinectController.Program.SERVER_REFRESH_FREQUENCY">
            <summary>
            Home refresh frequency
            </summary>
        </member>
        <member name="F:KinectController.Program.home">
            <summary>
            Home controller/viewer
            </summary>
        </member>
        <member name="F:KinectController.Program.running">
            <summary>
            Indicate if the application is still running
            </summary>
        </member>
        <member name="F:KinectController.Program.kinect">
            <summary>
            Kinect controller
            </summary>
        </member>
        <member name="F:KinectController.Program.scenario0">
            <summary>
            Scenario 0
            </summary>
        </member>
        <member name="F:KinectController.Program.scenario1">
            <summary>
            Scenario 1
            </summary>
        </member>
        <member name="F:KinectController.Program.scenario2">
            <summary>
            Scenario 2
            </summary>
        </member>
        <member name="M:KinectController.Program.HomeThread">
            <summary>
            Home loop
            </summary>
        </member>
        <member name="M:KinectController.Program.Main(System.String[])">
            <summary>
            Entry point
            </summary>
            <param name="args">List of arguments passed to the program</param>
        </member>
        <member name="T:KinectController.Scenario">
            <summary>
            Generic scenario
            </summary>
        </member>
        <member name="F:KinectController.Scenario._home">
            <summary>
            Home used by this scenario
            </summary>
        </member>
        <member name="F:KinectController.Scenario._kinect">
            <summary>
            Kinect controller sensor used by this scenario
            </summary>
        </member>
        <member name="M:KinectController.Scenario.#ctor(SmartHome.Home,KinectController.KinectController,System.Int32)">
            <summary>
            Initialize generic scenario
            </summary>
            <param name="h">Home to use</param>
            <param name="k">Kinect controller to use</param>
            <param name="stateCount">State count of this scenario</param>
        </member>
        <member name="M:KinectController.Scenario.Start">
            <summary>
            Start scenario
            </summary>
        </member>
        <member name="M:KinectController.Scenario.SkeleteCountChanged(System.Int32)">
            <summary>
            Event triggered when the number of skeleton detected changed
            </summary>
            <param name="newCount">New skeleton detected count</param>
        </member>
        <member name="M:KinectController.Scenario.ActionReceived(SmartHome.Home,SmartHome.HomeAction)">
            <summary>
            Event triggered when an action have been received by home
            </summary>
            <param name="h">Home concerned</param>
            <param name="a">Action received</param>
        </member>
        <member name="M:KinectController.Scenario.Init">
            <summary>
            Intialize this scenario
            </summary>
        </member>
        <member name="M:KinectController.Scenario.Step">
            <summary>
            Step in scenario
            </summary>
            <returns>False if no step remaining: stop the scenario</returns>
        </member>
        <member name="M:KinectController.Scenario.OnSkeleteCountChanged(System.Int32)">
            <summary>
            Event triggered when the number of skeleton detected changed
            </summary>
            <param name="newCount">New skeleton detected count</param>
        </member>
        <member name="M:KinectController.Scenario.OnActionReceived(SmartHome.Home,SmartHome.HomeAction)">
            <summary>
            Event triggered when an action have been received by home
            </summary>
            <param name="h">Home concerned</param>
            <param name="a">Action received</param>
        </member>
        <member name="P:KinectController.Scenario.ScenarioStateCount">
            <summary>
            Count of state availible in this scenario
            </summary>
        </member>
        <member name="P:KinectController.Scenario.ScenarioState">
            <summary>
            Current Scenario state
            </summary>
        </member>
        <member name="T:KinectController.Scenario0">
            <summary>
            Wait a skeletton Then 
                If day Then 
                    Switch off Light
                    Open flap
                If night Then
                    Switch on Light
                    Close flap
            When skeletton Leave
                Switch off light
                Close flap
                Close door
            </summary>
        </member>
        <member name="F:KinectController.Scenario0._room">
            <summary>
            Room used in this scenario
            </summary>
        </member>
        <member name="M:KinectController.Scenario0.#ctor(SmartHome.Home,KinectController.KinectController)">
            <summary>
            Initialize base scenario
            </summary>
            <param name="h">Home to use</param>
            <param name="k">Kinect controller to use</param>
        </member>
        <member name="M:KinectController.Scenario0.Init">
            <summary>
            Intialize this scenario
            </summary>
        </member>
        <member name="M:KinectController.Scenario0.OnActionReceived(SmartHome.Home,SmartHome.HomeAction)">
            <summary>
            Event triggered when an action have been received by home
            </summary>
            <param name="h">Home concerned</param>
            <param name="a">Action received</param>
        </member>
        <member name="M:KinectController.Scenario0.OnSkeleteCountChanged(System.Int32)">
            <summary>
            Event triggered when the number of skeleton detected changed
            </summary>
            <param name="newCount">New skeleton detected count</param>
        </member>
        <member name="T:KinectController.Scenario1">
            <summary>
            Switch light state follow skeleton presence and an list of room to cross 
                Each time a skeletton is detected Then 
                    Switch on light of room
                When skeletton leave Then
                    Switch off light of room
                    And step to next room of the room list
            </summary>
        </member>
        <member name="F:KinectController.Scenario1._roomsToCross">
            <summary>
            List of room to cross
            </summary>
        </member>
        <member name="F:KinectController.Scenario1._currentRoomIndex">
            <summary>
            Current room crossed
            </summary>
        </member>
        <member name="M:KinectController.Scenario1.#ctor(SmartHome.Home,KinectController.KinectController)">
            <summary>
            Initialize base scenario
            </summary>
            <param name="h">Home to use</param>
            <param name="k">Kinect controller to use</param>
        </member>
        <member name="M:KinectController.Scenario1.Init">
            <summary>
            Intialize this scenario
            </summary>
        </member>
        <member name="M:KinectController.Scenario1.OnActionReceived(SmartHome.Home,SmartHome.HomeAction)">
            <summary>
            Event triggered when an action have been received by home
            </summary>
            <param name="h">Home concerned</param>
            <param name="a">Action received</param>
        </member>
        <member name="M:KinectController.Scenario1.OnSkeleteCountChanged(System.Int32)">
            <summary>
            Event triggered when the number of skeleton detected changed
            </summary>
            <param name="newCount">New skeleton detected count</param>
        </member>
        <member name="T:KinectController.Scenario2">
            <summary>
            State 0:
                1. Send an action to "home_controller" "change_mode"("emergency")
                2. Send to "synthese" "say"(emergency_question[1..n]) each 10 seconde 
                    If "home_controller" send response "response_emergency_done" to "kinect" Then goto state 2
                    If all emergency question asked Then goto state 1
            State 1:
                1. Wait 2 skeleton representing emergency people 
                    Then Open entry door and switch on light And goto state 2
            State 2:
                1. End of scenario, emergency done or cancelled
            </summary>
        </member>
        <member name="F:KinectController.Scenario2._roomEntry">
            <summary>
            Private: Room representing the main door of the home
            </summary>
        </member>
        <member name="F:KinectController.Scenario2._lastTick">
            <summary>
            Private: Last tick used to check if 10s elapsed
            </summary>
        </member>
        <member name="F:KinectController.Scenario2._sentenceInterval">
            <summary>
            Private: Interval for emergency question
            </summary>
        </member>
        <member name="F:KinectController.Scenario2._currentEmergencyQuestion">
            <summary>
            Private: Current question asked
            </summary>
        </member>
        <member name="F:KinectController.Scenario2._emergencyQuestions">
            <summary>
            Sentences that home say each 10 secondes until user answer.
            </summary>
        </member>
        <member name="F:KinectController.Scenario2._emergencyCallText">
            <summary>
            Sentence that home say when emergency have been called
            </summary>
        </member>
        <member name="F:KinectController.Scenario2._emergencyUndoText">
            <summary>
            Sentence that home say when emergency are not needed
            </summary>
        </member>
        <member name="F:KinectController.Scenario2._emergencyArrivedText">
            <summary>
            Sentence that home say when emergency arrive
            </summary>
        </member>
        <member name="F:KinectController.Scenario2._emergencyDestText">
            <summary>
            Sentence that home say for emergency
            </summary>
        </member>
        <member name="M:KinectController.Scenario2.#ctor(SmartHome.Home,KinectController.KinectController)">
            <summary>
            Initialize base scenario
            </summary>
            <param name="h">Home to use</param>
            <param name="k">Kinect controller to use</param>
        </member>
        <member name="M:KinectController.Scenario2.Init">
            <summary>
            Intialize this scenario
            </summary>
        </member>
        <member name="M:KinectController.Scenario2.Step">
            <summary>
            Step in scenario
            </summary>
            <returns>False if no step remaining: stop the scenario</returns>
        </member>
        <member name="M:KinectController.Scenario2.OnActionReceived(SmartHome.Home,SmartHome.HomeAction)">
            <summary>
            Event triggered when an action have been received by home
            </summary>
            <param name="h">Home concerned</param>
            <param name="a">Action received</param>
        </member>
        <member name="M:KinectController.Scenario2.OnSkeleteCountChanged(System.Int32)">
            <summary>
            Event triggered when the number of skeleton detected changed
            </summary>
            <param name="newCount">New skeleton detected count</param>
        </member>
    </members>
</doc>
